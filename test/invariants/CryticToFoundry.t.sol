// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

// Libraries
import "forge-std/Test.sol";
import "forge-std/console.sol";

// Test Contracts
import {Invariants} from "./Invariants.t.sol";
import {Setup} from "./Setup.t.sol";

/// @title CryticToFoundry
/// @notice Foundry wrapper for fuzzer failed call sequences
/// @dev Regression testing for failed call sequences
contract CryticToFoundry is Invariants, Setup {
    modifier setup() override {
        _;
    }

    /// @dev Foundry compatibility faster setup debugging
    function setUp() public {
        // Deploy protocol contracts and protocol actors
        _setUp();

        // Deploy actors
        _setUpActors();

        // Initialize handler contracts
        _setUpHandlers();

        actor = actors[USER1];
    }

    function test_hooks() public {
        assert_VaultBase_invariantA(vaults[0]);
    }

    function test_setCollateralFactor() public {
        this.setCollateralFactor(2, 100);
    }

    function test_brokenMedusaInvariant() public {
        actor = actors[USER2];

        vm.warp(45348);
        this.setInterestRate(99999999999999999999999635);

        vm.warp(45355);
        this.deposit(
            3671743063080802746815416825491118336290905145409708398004109081935346,
            0x0000000000000000000000000000000001ffc9a7,
            256
        );

        vm.warp(104869);
        this.mintToActor(
            584007913129639936,
            1461501637330902918203684832716283019655932542975,
            30362808798281246480524449931024234919661350613807169413187594475717001416407
        );

        this.enableController(
            6252581806732826542102055870773261469164455618509096943616, 100000000000000000000000000000
        );

        vm.warp(110626);
        this.borrowTo(
            131072,
            14246703677440183165141387562015842214396964696556621053914374877048747707402,
            113045367814223527155374216513980611294147760687180486228232781248365040559413
        );

        vm.warp(110637);
        this.mint(
            125,
            0xCC9A31701696B32582CE8fAB30B0dF273632BA39,
            30659301841701235528704831814079863282139560059745002970586078399931117454890
        );

        echidna_invariant_VaultSimple_invariantABCD();
    }

    function test_randomGenerator() public {
        this.deposit(
            33540519,
            0x00000000000000000000000000000000000D2F00,
            115792089237316195423570985008687907853269984665640564038457584007913129639936
        );
        echidna_invariant_ERC4626_invariantC();
    }

    function test_randomGenerator2() public {
        this.enableController(
            115792089237316195423570985008687907853269984665640564039457584007913098103936,
            84324803490407990099630289484635209950607236238229840835131517124991019582551
        );
        this.transferFromTo(
            102596528377683889470530526750957842091516415453630919481492631661500728907026,
            926336713898529563388567880069503262826159877325124512315660672063305037119,
            51667562231945785369956100275758549403827142959673009075309753241094221168898
        );
        this.depositToActor(
            106600732788382924345956769259832310641347621343366604513140689191460126929103,
            35815065586728199818332881259140593992448015991120424977113948269919721116936,
            115792089237316195423570985008687907853269984665640564039457584007913129443348
        );
        this.approveTo(
            76831150040254143292555879887341834517645717271265381324085653578033521470821,
            115792089237316195423570985008687907853269984665640443829581302726767561379993,
            115792089237316195423570985008687907852837564279074904382605163141518161494337
        );
        this.mint(
            80555969092694762005971453436274631818648347521412642817525177701330494745533,
            0x0000000000000000000000000e92596FD6290000,
            36922194963225729320427049214930561341478070945457572635092946535336978330068
        );
        this.enableController(
            35089866232979171287006990962976138823418613256073472250585222285290207657724,
            47769893068364712764299559898304694675384338631553055252107355864696151490882
        );
        this.redeem(
            115792089237316195423570985008687907853269984665640564039457584007913105719296,
            115792089237316195423570985008240606102015950752194670824766749710982581118484,
            0x1c6D6ffBe1AE6eB9706272a553af1c5952020A1F
        );
        this.echidna_invariant_VaultSimpleBorrowable_invariantAB();
        this.echidna_invariant_ERC4626_invariantC();
        this.deposit(
            9,
            0x0000000000000000000000000000000000000030,
            2375477279405909698935467483120831348305722717939597833141669051977041433098
        );
        this.setAccountOperator(
            1062468385285362435067064728775283498829005099180777199391514692808748094174,
            25891020811925956782212646354953708728668838783721221940501661560287488096692,
            false
        );
        this.donate(
            28231686544233962001497333511993141445294626391175666276036343525494549948221,
            100555957116171956647642717136463861021095718950614900633649536183747808993645
        );

        echidna_invariant_ERC4626_invariantC();
    }

    function test_VaultsimpleBorrowable_invariantAB_broken() public {
        vm.warp(15539);
        this.deposit(
            33540519, 0x3ca81B7871B5193D8a8dDF0A66DF39Af7026c46c, 491460923342184218035706888008750043977755113263
        );

        this.enableController(
            115792089237316195423570985008687907853269984665640564039456534007913129639932,
            9270991534636793796079392909274201709041168333746567631344136636704232217868
        );

        vm.warp(24050);
        this.setInterestRate(2000000);

        vm.warp(48973);
        this.borrowTo(1, 0, 17449446480539213363252697528385889426517862377871667954871616578881665540854);

        vm.warp(91425);
        this.transfer(
            0x7f040739dd44acE6c7D0d723d8768bC4fc92C7d9,
            115792089237316195423570985008687907853269984665640564039457584007913129639680,
            0
        );

        vm.warp(92543);
        this.redeem(
            68616001108535138891329511714388512504235841821340693413446758821742237709288,
            115792089237316195423570985007534296064330979954823914764994441102956452984303,
            0x1F9bb302E6F649c0492F7Ff5F7D54B45b5AaF6Fc
        );

        echidna_invariant_VaultSimpleBorrowable_invariantAB();
    }
}
